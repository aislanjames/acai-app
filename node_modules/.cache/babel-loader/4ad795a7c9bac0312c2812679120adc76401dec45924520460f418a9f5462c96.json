{"ast":null,"code":"var _jsxFileName = \"/home/aislan/\\xC1rea de Trabalho/Aislan/Estudos/Desafio/Retornar/venda-de-acai/acai-app/src/pages/Home/index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { acaiSchema } from '../../validation';\nimport { useDispatch } from 'react-redux';\nimport { setPedido } from '../../features/pedido/pedidoSlice';\nimport { useNavigate } from 'react-router-dom';\nimport { fetchProdutos } from '../../services/mockApi';\nimport Footer from '../../components/Footer/Footer';\nimport '../../components/Home/Home.css';\n\n// Adicionando o tipo Produto, conforme já definido previamente.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Home = () => {\n  _s();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [quantidade, setQuantidade] = useState(1);\n  const [valorTotal, setValorTotal] = useState(0); // Certifique-se de que valorTotal é um número\n  const [etapaAtual, setEtapaAtual] = useState(1);\n  const [produtos, setProdutos] = useState([]); // Garanta que produtos é do tipo Produto[]\n\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: {\n      errors\n    },\n    getValues,\n    setValue\n  } = useForm({\n    resolver: zodResolver(acaiSchema)\n  });\n  const calculateAndUpdateTotal = (data, quantidade) => {\n    let totalValor = 0;\n    return totalValor;\n  };\n  useEffect(() => {\n    const loadData = async () => {\n      const produtosData = await fetchProdutos();\n      setProdutos(produtosData); // Assume que setProdutos atualiza o estado corretamente\n      if (produtosData.length > 0) {\n        var _produtosData$find;\n        const tamanhoInicial = ((_produtosData$find = produtosData.find(p => p.tipo === 'tamanho')) === null || _produtosData$find === void 0 ? void 0 : _produtosData$find.nome) || '';\n        setValue('tamanho', tamanhoInicial);\n        // Após a inicialização, force uma atualização do valor total\n        const formData = getValues(); // Obtenha os valores atuais do formulário\n        calculateAndUpdateTotal(formData, quantidade);\n      }\n    };\n    loadData();\n  }, [setValue, getValues, quantidade, calculateAndUpdateTotal, handleSubmit]);\n  useEffect(() => {\n    const subscription = watch(() => {\n      calculateAndUpdateTotal();\n    });\n    return () => subscription.unsubscribe();\n  }, [watch]);\n  useEffect(() => {\n    calculateAndUpdateTotal();\n  }, [quantidade]);\n  const onSubmitData = data => {\n    const totalValor = calculateAndUpdateTotal(data, quantidade);\n    dispatch(setPedido({\n      ...data,\n      valorTotal: totalValor\n    }));\n    navigate('/pedido');\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"container\",\n      onSubmit: handleSubmit(onSubmitData),\n      children: /*#__PURE__*/_jsxDEV(Footer, {\n        onSubmit: handleSubmit(onSubmitData) // Correção: diretamente passar onSubmitData\n        ,\n        valorTotal: `R$ ${valorTotal.toFixed(2)}`,\n        quantidade: quantidade,\n        setQuantidade: setQuantidade\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n};\n_s(Home, \"oKxqikAaCJcFujG7ELgT7Y9PJ1M=\", false, function () {\n  return [useNavigate, useDispatch, useForm];\n});\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","useForm","zodResolver","acaiSchema","useDispatch","setPedido","useNavigate","fetchProdutos","Footer","jsxDEV","_jsxDEV","Home","_s","navigate","dispatch","quantidade","setQuantidade","valorTotal","setValorTotal","etapaAtual","setEtapaAtual","produtos","setProdutos","register","handleSubmit","watch","formState","errors","getValues","setValue","resolver","calculateAndUpdateTotal","data","totalValor","loadData","produtosData","length","_produtosData$find","tamanhoInicial","find","p","tipo","nome","formData","subscription","unsubscribe","onSubmitData","children","className","onSubmit","toFixed","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/aislan/Área de Trabalho/Aislan/Estudos/Desafio/Retornar/venda-de-acai/acai-app/src/pages/Home/index.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { acaiSchema } from '../../validation';\nimport { useDispatch } from 'react-redux';\nimport { setPedido } from '../../features/pedido/pedidoSlice';\nimport { useNavigate } from 'react-router-dom';\nimport { fetchProdutos } from '../../services/mockApi';\nimport RadioTamanho from '../../components/Home/RadioTamanho';\nimport RadioFruta from '../../components/Home/RadioFruta';\nimport CheckboxComplementos from '../../components/Home/CheckboxComplementos';\nimport Footer from '../../components/Footer/Footer';\nimport BotaoVoltar from '../../components/BotaoVoltar';\nimport produtoImg from '../../assets/img/Banner.png';\nimport '../../components/Home/Home.css';\n\n// Adicionando o tipo Produto, conforme já definido previamente.\ninterface Produto {\n    nome: string;\n    tipo: 'tamanho' | 'sabor' | 'complemento';\n    valor?: string;\n}\n\ntype FormValues = {\n    tamanho: string;\n    sabor: string;\n    complementos: Record<string, boolean>;\n};\n\nexport const Home = () => {\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n    const [quantidade, setQuantidade] = useState(1);\n    const [valorTotal, setValorTotal] = useState<number>(0); // Certifique-se de que valorTotal é um número\n    const [etapaAtual, setEtapaAtual] = useState(1);\n    const [produtos, setProdutos] = useState<Produto[]>([]); // Garanta que produtos é do tipo Produto[]\n\n    const { register, handleSubmit, watch, formState: { errors }, getValues, setValue } = useForm<FormValues>({\n        resolver: zodResolver(acaiSchema),\n    });\n\n    const calculateAndUpdateTotal = (data: FormValues, quantidade: number): number => {\n        let totalValor = 0;\n\n        return totalValor;\n    };\n\n    useEffect(() => {\n        const loadData = async () => {\n            const produtosData: Produto[] = await fetchProdutos();\n            setProdutos(produtosData); // Assume que setProdutos atualiza o estado corretamente\n            if (produtosData.length > 0) {\n                const tamanhoInicial = produtosData.find((p: Produto) => p.tipo === 'tamanho')?.nome || '';\n                setValue('tamanho', tamanhoInicial);\n                // Após a inicialização, force uma atualização do valor total\n                const formData = getValues(); // Obtenha os valores atuais do formulário\n                calculateAndUpdateTotal(formData, quantidade);\n            }\n        };\n        loadData();\n    }, [setValue, getValues, quantidade, calculateAndUpdateTotal, handleSubmit]);\n\n    useEffect(() => {\n        const subscription = watch(() => {\n            calculateAndUpdateTotal();\n        });\n        return () => subscription.unsubscribe();\n    }, [watch]);\n\n    useEffect(() => {\n        calculateAndUpdateTotal();\n    }, [quantidade]);\n\n    const onSubmitData = (data: FormValues) => {\n        const totalValor = calculateAndUpdateTotal(data, quantidade);\n        dispatch(setPedido({\n            ...data,\n            valorTotal: totalValor,\n        }));\n        navigate('/pedido');\n    };\n\n    return (\n        <section>\n            {/* Marcação... */}\n            <form className='container' onSubmit={handleSubmit(onSubmitData)}>\n                {/* Componentes... */}\n                <Footer\n                    onSubmit={handleSubmit(onSubmitData)} // Correção: diretamente passar onSubmitData\n                    valorTotal={`R$ ${valorTotal.toFixed(2)}`}\n                    quantidade={quantidade}\n                    setQuantidade={setQuantidade}\n                />\n            </form>\n        </section>\n    );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}