{"ast":null,"code":"var _jsxFileName = \"/home/aislan/\\xC1rea de Trabalho/Aislan/Estudos/Desafio/Retornar/venda-de-acai/acai-app/src/pages/Home/index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { acaiSchema } from '../../validation';\nimport { useDispatch } from 'react-redux';\nimport { setPedido } from '../../features/pedido/pedidoSlice';\nimport { useNavigate } from 'react-router-dom';\nimport { fetchProdutos } from '../../services/mockApi';\nimport RadioTamanho from '../../components/Home/RadioTamanho';\nimport RadioFruta from '../../components/Home/RadioFruta';\nimport CheckboxComplementos from '../../components/Home/CheckboxComplementos';\nimport Footer from '../../components/Footer/Footer';\nimport BotaoVoltar from '../../components/BotaoVoltar';\nimport produtoImg from '../../assets/img/Banner.png';\nimport '../../components/Home/Home.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Home = () => {\n  _s();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [quantidade, setQuantidade] = useState(1);\n  const [valorTotal, setValorTotal] = useState(0);\n  const [etapaAtual, setEtapaAtual] = useState(1);\n  const [produtos, setProdutos] = useState([]);\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: {\n      errors\n    },\n    getValues,\n    setValue\n  } = useForm({\n    resolver: zodResolver(acaiSchema)\n  });\n  useEffect(() => {\n    const loadData = async () => {\n      const produtosData = await fetchProdutos();\n      setProdutos(produtosData);\n    };\n    loadData();\n  }, []);\n  useEffect(() => {\n    // Este useEffect agora observa a mudança nos produtos e ajusta o valor inicial e recalcula o total\n    if (produtos.length > 0) {\n      var _produtos$find;\n      const tamanhoInicial = ((_produtos$find = produtos.find(p => p.tipo === 'tamanho')) === null || _produtos$find === void 0 ? void 0 : _produtos$find.nome) || '';\n      setValue('tamanho', tamanhoInicial); // Defina o valor inicial para tamanho\n      // Recalcule o total inicial aqui, se necessário\n    }\n  }, [produtos, setValue]);\n  const calculateAndUpdateTotal = () => {\n    const currentValues = getValues();\n    let total = 0;\n    // Lógica para calcular o total com base em currentValues e quantidade\n    setValorTotal(total);\n  };\n  const onSubmitData = data => {\n    calculateAndUpdateTotal();\n    dispatch(setPedido({\n      ...data,\n      valorTotal: valorTotal.toString()\n    }));\n    navigate('/pedido');\n  };\n  useEffect(() => {\n    // Subscrição para mudanças no formulário que recalculam o total\n    const subscription = watch(() => {\n      calculateAndUpdateTotal();\n    });\n    return () => subscription.unsubscribe();\n  }, [watch]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"produto\",\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(BotaoVoltar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: produtoImg,\n        alt: \"A\\xE7a\\xED\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"container\",\n      onSubmit: handleSubmit(onSubmitData),\n      children: [etapaAtual === 1 && /*#__PURE__*/_jsxDEV(RadioTamanho, {\n        register: register,\n        tamanhos: produtos.filter(p => p.tipo === 'tamanho').map(p => p.nome)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 38\n      }, this), etapaAtual === 2 && /*#__PURE__*/_jsxDEV(RadioFruta, {\n        register: register,\n        sabores: produtos.filter(p => p.tipo === 'sabor').map(p => p.nome)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 38\n      }, this), etapaAtual === 3 && /*#__PURE__*/_jsxDEV(CheckboxComplementos, {\n        register: register,\n        complementos: produtos.filter(p => p.tipo === 'complemento').map(p => p.nome)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 38\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {\n        onSubmit: handleSubmit(onSubmitData),\n        valorTotal: `R$ ${valorTotal.toFixed(2)}`,\n        quantidade: quantidade,\n        setQuantidade: setQuantidade\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n};\n_s(Home, \"oKxqikAaCJcFujG7ELgT7Y9PJ1M=\", false, function () {\n  return [useNavigate, useDispatch, useForm];\n});\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","useForm","zodResolver","acaiSchema","useDispatch","setPedido","useNavigate","fetchProdutos","RadioTamanho","RadioFruta","CheckboxComplementos","Footer","BotaoVoltar","produtoImg","jsxDEV","_jsxDEV","Home","_s","navigate","dispatch","quantidade","setQuantidade","valorTotal","setValorTotal","etapaAtual","setEtapaAtual","produtos","setProdutos","register","handleSubmit","watch","formState","errors","getValues","setValue","resolver","loadData","produtosData","length","_produtos$find","tamanhoInicial","find","p","tipo","nome","calculateAndUpdateTotal","currentValues","total","onSubmitData","data","toString","subscription","unsubscribe","children","id","className","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onSubmit","tamanhos","filter","map","sabores","complementos","toFixed","_c","$RefreshReg$"],"sources":["/home/aislan/Área de Trabalho/Aislan/Estudos/Desafio/Retornar/venda-de-acai/acai-app/src/pages/Home/index.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { acaiSchema } from '../../validation';\nimport { useDispatch } from 'react-redux';\nimport { setPedido } from '../../features/pedido/pedidoSlice';\nimport { useNavigate } from 'react-router-dom';\nimport { fetchProdutos } from '../../services/mockApi';\nimport RadioTamanho from '../../components/Home/RadioTamanho';\nimport RadioFruta from '../../components/Home/RadioFruta';\nimport CheckboxComplementos from '../../components/Home/CheckboxComplementos';\nimport Footer from '../../components/Footer/Footer';\nimport BotaoVoltar from '../../components/BotaoVoltar';\nimport produtoImg from '../../assets/img/Banner.png';\nimport '../../components/Home/Home.css';\n\ninterface Produto {\n    id: string;\n    tipo: 'tamanho' | 'sabor' | 'complemento';\n    nome: string;\n    valor?: string; // O valor é opcional, pois nem todos os produtos têm valor (ex.: sabores)\n    avatar: string;\n  }\n  \n  type FormValues = {\n    tamanho: string;\n    sabor: string;\n    complementos: Record<string, boolean>;\n  };\n\nexport const Home = () => {\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n    const [quantidade, setQuantidade] = useState(1);\n    const [valorTotal, setValorTotal] = useState(0);\n    const [etapaAtual, setEtapaAtual] = useState(1);\n    const [produtos, setProdutos] = useState([]);\n\n    const { register, handleSubmit, watch, formState: { errors }, getValues, setValue } = useForm<FormValues>({\n        resolver: zodResolver(acaiSchema),\n    });\n\n    useEffect(() => {\n        const loadData = async () => {\n            const produtosData = await fetchProdutos();\n            setProdutos(produtosData);\n        };\n        \n        loadData();\n    }, []);\n\n    useEffect(() => {\n        // Este useEffect agora observa a mudança nos produtos e ajusta o valor inicial e recalcula o total\n        if (produtos.length > 0) {\n            const tamanhoInicial = produtos.find(p => p.tipo === 'tamanho')?.nome || '';\n            setValue('tamanho', tamanhoInicial); // Defina o valor inicial para tamanho\n            // Recalcule o total inicial aqui, se necessário\n        }\n    }, [produtos, setValue]);\n\n    const calculateAndUpdateTotal = () => {\n        const currentValues = getValues();\n        let total = 0;\n        // Lógica para calcular o total com base em currentValues e quantidade\n        setValorTotal(total);\n    };\n\n    const onSubmitData = (data: FormValues) => {\n        calculateAndUpdateTotal();\n        dispatch(setPedido({\n            ...data,\n            valorTotal: valorTotal.toString(),\n        }));\n        navigate('/pedido');\n    };\n\n    useEffect(() => {\n        // Subscrição para mudanças no formulário que recalculam o total\n        const subscription = watch(() => {\n            calculateAndUpdateTotal();\n        });\n        return () => subscription.unsubscribe();\n    }, [watch]);\n\n    return (\n        <section>\n            <div id='produto' className='container'>\n                <BotaoVoltar />\n                <img src={produtoImg} alt=\"Açaí\" />\n            </div>\n            <form className='container' onSubmit={handleSubmit(onSubmitData)}>\n                {etapaAtual === 1 && <RadioTamanho register={register} tamanhos={produtos.filter(p => p.tipo === 'tamanho').map(p => p.nome)} />}\n                {etapaAtual === 2 && <RadioFruta register={register} sabores={produtos.filter(p => p.tipo === 'sabor').map(p => p.nome)} />}\n                {etapaAtual === 3 && <CheckboxComplementos register={register} complementos={produtos.filter(p => p.tipo === 'complemento').map(p => p.nome)} />}\n                <Footer onSubmit={handleSubmit(onSubmitData)} valorTotal={`R$ ${valorTotal.toFixed(2)}`} quantidade={quantidade} setQuantidade={setQuantidade} />\n            </form>\n        </section>\n    );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}